{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/LoadingScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","googleAuthProvider","GoogleAuthProvider","types","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","getDocs","query","collection","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","type","payload","addNewNote","setNotes","startSaveNote","dispatch","getState","auth","url","noteToFirestore","noteRef","doc","updateDoc","refreshNote","Swal","fire","title","deleteNote","setError","err","startLoading","finishLoading","login","displayName","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","fileInput","useRef","className","ref","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startFileUpload","onClick","current","click","NoteScreen","formValues","activeId","useEffect","placeholder","autoComplete","src","alt","deleteDoc","startDelete","NothingSelected","JournalEntry","date","noteDate","moment","handleActive","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","getAuth","signOut","newNote","Date","getTime","addDoc","JournalScreen","LoadingScreen","LoginScreen","loading","ui","email","password","onSubmit","preventDefault","signInWithEmailAndPassword","then","user","catch","message","finally","startLogin","disabled","signInWithPopup","to","RegisterScreen","msgError","confirm","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","currentUser","startRegister","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87168af1.chunk.js","sourcesContent":["import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n \r\n \r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBilMUJkvSY2SxmTZKOaJdTEaX2HllTi-M\",\r\n    authDomain: \"curso-node-325304.firebaseapp.com\",\r\n    projectId: \"curso-node-325304\",\r\n    storageBucket: \"curso-node-325304.appspot.com\",\r\n    messagingSenderId: \"666663406124\",\r\n    appId: \"1:666663406124:web:4a23c103196337cb31df89\"\r\n};\r\n \r\ninitializeApp(firebaseConfig);\r\n \r\nconst db = getFirestore();\r\n \r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n \r\nexport{\r\n    db,\r\n    googleAuthProvider\r\n}","export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddEntry: '[Notes] New Note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdate: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Updated img',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","\r\n\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudinaryUrl = '\thttps://api.cloudinary.com/v1_1/cdforna/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','React-Journal')\r\n    formData.append('file',file)\r\n\r\n    try {\r\n        const resp = await fetch(cloudinaryUrl,{\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if (resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json()\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import { collection, getDocs, query } from \"@firebase/firestore\"\r\nimport { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async(uid) =>{\r\n    const notesSnap = await getDocs(query(collection(db,`${uid}/journal/notes`)))\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapHijo =>{\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    return notes;\r\n}","import { addDoc, collection, deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\r\nimport Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startCreateNote = () =>{\r\n    return async(dispatch,getState)=>{\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await addDoc(collection(db,`${uid}/journal/notes`),newNote)\r\n\r\n        dispatch(activeNote(doc.id,newNote))\r\n        dispatch(addNewNote(doc.id,newNote))\r\n        \r\n    }\r\n}\r\n\r\nexport const activeNote = (id,note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = (id,note) =>({\r\n    type: types.notesAddEntry,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) =>{\r\n    return async(dispatch)=>{\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes))\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) =>({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) =>{\r\n    return async(dispatch,getState)=>{\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        const noteRef = doc(db, `${uid}/journal/notes/${note.id}`)\r\n        await updateDoc(noteRef,noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id,noteToFirestore));\r\n\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id,note)=>({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startFileUpload = (file)=>{\r\n    return async(dispatch,getState)=>{\r\n\r\n        const {active: activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: ()=>{\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl\r\n\r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const startDelete = (id) =>{\r\n    return async(dispatch,getState)=>{\r\n        const uid = getState().auth.uid;\r\n        const noteRef = doc(db, `${uid}/journal/notes/${id}`)\r\n        await deleteDoc(noteRef);\r\n \r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) =>({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const notesLogoutCleaning = () => ({\r\n    type: types.notesLogoutCleaning\r\n}) \r\n\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) =>({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const RemoveError = () =>({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = ()=>({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = ()=>({\r\n    type: types.uiFinishLoading\r\n})","import { createUserWithEmailAndPassword, getAuth, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from \"@firebase/auth\";\r\nimport Swal from 'sweetalert2'\r\nimport { googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { notesLogoutCleaning } from \"./notes\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\n\r\n\r\nexport const startLogin = (email,password)=>{\r\n    return (dispatch) => {\r\n        \r\n        dispatch(startLoading())\r\n\r\n        const auth = getAuth();\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(({user}) =>{\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n            .catch(e => {\r\n                Swal.fire('Error',e.message, 'error')\r\n            })\r\n            .finally(()=>{\r\n                dispatch(finishLoading())\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegister = (email,password,name) =>{\r\n    return (dispatch) =>{\r\n\r\n        dispatch(startLoading())\r\n\r\n        const auth = getAuth();\r\n        createUserWithEmailAndPassword(auth, email,password)\r\n            .then(async({user}) =>{\r\n                await updateProfile(auth.currentUser,{displayName: name})\r\n\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n            .catch(e =>{\r\n                Swal.fire('Error',e.message, 'error')\r\n            })\r\n            .finally(()=>{\r\n                dispatch(finishLoading())\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = ()=>{\r\n    return (dispatch) => {\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, googleAuthProvider)\r\n            .then(({user}) =>{\r\n                dispatch(login(user.uid, user.displayName))\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid,displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        const auth = getAuth();\r\n        await signOut(auth);\r\n\r\n        dispatch(logout());\r\n        dispatch(notesLogoutCleaning())\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout,\r\n});","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React, { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startFileUpload, startSaveNote } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    const fileInput = useRef();\r\n\r\n    const handleSave = ()=>{\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureUpload = ()=>{\r\n        fileInput.current.click();\r\n    }\r\n\r\n    const handleFileChange = e => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startFileUpload(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>12 de marzo de 2022</span>\r\n\r\n            <input \r\n                ref={fileInput}\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: \"none\"}}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlePictureUpload}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDelete } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {active: note} = useSelector(state => state.notes);\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n    const {body,title,id} = formValues;\r\n\r\n    const activeId = useRef(note.id)\r\n\r\n    useEffect(() => {\r\n        \r\n        if(note.id !== activeId.current){\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n        \r\n    }, [note,reset])\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(activeNote(formValues.id,{...formValues}))\r\n\r\n    }, [formValues ,dispatch])\r\n\r\n    const handleDelete = () =>{\r\n        dispatch(startDelete(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    note.url &&\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src={`${note.url}`}\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create a new entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({id,date,title,body,url}) => {\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const note = {\r\n        date,\r\n        title,\r\n        body,\r\n        url\r\n    }\r\n\r\n    const handleActive = (id,note)=>{\r\n        dispatch(activeNote(id,note))\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\" \r\n            onClick={()=> handleActive(id,note)}\r\n        >\r\n\r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `${url}`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <div className=\"jounal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { startCreateNote } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleCreateEntry = () =>{\r\n        dispatch(startCreateNote())\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>{name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleCreateEntry}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\r\n        >\r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const LoadingScreen = () => {\r\n    return (\r\n        <div className=\"loading__loading-content\">\r\n            <h1 className=\"loading__title mb-5\">Loading</h1>\r\n            <div className=\"loading__loader-wrapper\">\r\n                <div className=\"loading__loader\">\r\n                    <div className=\"loading__circle\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLogin } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading} = useSelector(state => state.ui)\r\n\r\n    const [formValues,handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const {email,password} = formValues;\r\n\r\n    const handleLogin = e =>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(email,password))\r\n    }\r\n\r\n    const handleGoogleLogin = () =>{\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title mb-5\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with Social Networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator';\r\nimport { startRegister } from '../../actions/auth';\r\nimport { RemoveError, setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {loading} = useSelector(state => state.ui)\r\n\r\n    const { msgError } = useSelector(state => state.ui)\r\n\r\n    const [formValues,handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirm: ''\r\n    })\r\n\r\n    const {name, email, password, confirm} = formValues;\r\n\r\n    const handleRegister = e =>{\r\n        e.preventDefault();\r\n        \r\n        if ( isFormValid() ){\r\n\r\n            dispatch(startRegister(email,password,name))\r\n\r\n        }\r\n    }\r\n\r\n    const isFormValid = () =>{\r\n\r\n        if (name.trim().length === 0){\r\n\r\n            dispatch(setError('Name is required'))\r\n            return false;\r\n        \r\n        }else if (!validator.isEmail(email)){\r\n\r\n            dispatch(setError('Email is not valid'))\r\n            return false;\r\n\r\n        }else if (password !== confirm || password.length < 6){\r\n\r\n            dispatch(setError('Password should be at least 6 characters and match with the confirmation'))\r\n            return false\r\n            \r\n        }\r\n\r\n        dispatch(RemoveError())\r\n        return true\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title mb-5\">Register</h3>\r\n\r\n            <form \r\n                onSubmit= { handleRegister }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirm\"\r\n                    className=\"auth__input\"\r\n                    value={confirm}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    disabled={loading}\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link to=\"/auth/login\" className=\"link\">\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                <Route\r\n                    exact\r\n                    path=\"/auth/login\" \r\n                    component={LoginScreen} \r\n                />\r\n\r\n                <Route \r\n                    exact\r\n                    path=\"/auth/register\" \r\n                    component={RegisterScreen} \r\n                />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (     \r\n        <Route {...rest}\r\n\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} /> \r\n                    : <Redirect to=\"/auth/login\" />\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (     \r\n        <Route {...rest}\r\n\r\n            component={ (props) => (\r\n                (!isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/\" />\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import { getAuth, onAuthStateChanged } from '@firebase/auth';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    //Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { login } from '../actions/auth';\r\nimport { startLoadingNotes } from '../actions/notes';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { LoadingScreen } from '../components/LoadingScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        const auth = getAuth()\r\n        onAuthStateChanged(auth, (user) => {\r\n\r\n            if (user?.uid){\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true)\r\n\r\n                dispatch(startLoadingNotes(user.uid))\r\n            }else{\r\n                setIsLoggedIn(false)\r\n            }\r\n\r\n            setChecking(false)\r\n            \r\n        })\r\n\r\n    }, [dispatch])\r\n\r\n\r\n    if(checking){\r\n        return(\r\n            <LoadingScreen />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute \r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ isLoggedIn }\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated={ isLoggedIn }\r\n                        path=\"/\"\r\n                        component={ JournalScreen }\r\n                    />\r\n\r\n                    {/* {\r\n                        isLoggedIn\r\n                        ?\r\n                            <Route\r\n                                exact\r\n                                path=\"/\"\r\n                                component={JournalScreen}\r\n                            />\r\n                        :\r\n                            <Route\r\n                                path=\"/auth\"\r\n                                component={AuthRouter}\r\n                            />\r\n                    } */}\r\n \r\n                    <Redirect to={isLoggedIn?'/':'/auth/login'} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState,action)=>{\r\n\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n    \r\n        case types.notesAddEntry:\r\n            return{\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState,action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state={},action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n            return { }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}